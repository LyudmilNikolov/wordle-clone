[{"/Users/user/repos/my-app/src/index.js":"1","/Users/user/repos/my-app/src/App.js":"2","/Users/user/repos/my-app/src/reportWebVitals.js":"3","/Users/user/repos/wordle-clone/src/index.js":"4","/Users/user/repos/wordle-clone/src/reportWebVitals.js":"5","/Users/user/repos/wordle-clone/src/App.js":"6","/Users/user/repos/wordle-clone/src/Words.js":"7","/Users/user/repos/wordle-clone/src/components/Modal.js":"8","/Users/user/repos/wordle-clone/src/components/GameOver.js":"9","/Users/user/repos/wordle-clone/src/components/Keyboard.js":"10","/Users/user/repos/wordle-clone/src/components/Board.js":"11","/Users/user/repos/wordle-clone/src/components/Letter.js":"12","/Users/user/repos/wordle-clone/src/components/Key.js":"13"},{"size":513,"mtime":1678467955020,"results":"14","hashOfConfig":"15"},{"size":2492,"mtime":1678535234288,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1678293121728,"results":"17","hashOfConfig":"15"},{"size":513,"mtime":1678467955020,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1678293121728,"results":"20","hashOfConfig":"19"},{"size":6116,"mtime":1679134606617,"results":"21","hashOfConfig":"19"},{"size":591,"mtime":1678535164423,"results":"22","hashOfConfig":"19"},{"size":2842,"mtime":1679043969727,"results":"23","hashOfConfig":"19"},{"size":469,"mtime":1678534763855,"results":"24","hashOfConfig":"19"},{"size":2280,"mtime":1679054289820,"results":"25","hashOfConfig":"19"},{"size":2146,"mtime":1678470034907,"results":"26","hashOfConfig":"19"},{"size":822,"mtime":1679053758125,"results":"27","hashOfConfig":"19"},{"size":579,"mtime":1679054012374,"results":"28","hashOfConfig":"19"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lii169",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kvpgaw",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/repos/my-app/src/index.js",[],[],"/Users/user/repos/my-app/src/App.js",[],[],"/Users/user/repos/my-app/src/reportWebVitals.js",[],[],"/Users/user/repos/wordle-clone/src/index.js",[],[],"/Users/user/repos/wordle-clone/src/reportWebVitals.js",[],[],"/Users/user/repos/wordle-clone/src/App.js",["71","72"],[],"/Users/user/repos/wordle-clone/src/Words.js",[],[],"/Users/user/repos/wordle-clone/src/components/Modal.js",[],[],"/Users/user/repos/wordle-clone/src/components/GameOver.js",[],[],"/Users/user/repos/wordle-clone/src/components/Keyboard.js",["73","74","75"],[],"import React, { useState, useCallback, useEffect, useContext } from 'react'\nimport Key from './Key';\nimport { AppContext } from '../App';\n\nfunction Keyboard() {\n  const keys1 = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'];\n  const keys2 = ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'];\n  const keys3 = ['Z', 'X', 'C', 'V', 'B', 'N', 'M'];\n\n  const allKeys = [...keys1, ...keys2, ...keys3];\n\n  const { onSelectLetter, onDelete, onEnter, disabledLetters } = useContext(AppContext);\n\n  const [pressedKey, setPressedKey] = useState(null); // Add state variable\n\n  const handleKeyboard = useCallback((event) =>{\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      onEnter();\n    } else if (event.key === 'Backspace') {\n      event.preventDefault();\n      onDelete();\n    } else {\n      if (allKeys.join('').includes(event.key.toUpperCase())) {\n        onSelectLetter(event.key.toUpperCase());\n        setPressedKey(event.key.toUpperCase());\n      }\n    }\n  }, [allKeys, onEnter, onDelete, onSelectLetter])\n\n  useEffect(() =>{\n    document.addEventListener('keydown', handleKeyboard);\n\n    return () => {\n        document.removeEventListener('keydown', handleKeyboard);\n    }\n  }, [handleKeyboard])\n\n  useEffect(() => {\n    const handleKeyUp = (event) => {\n      if (allKeys.join('').includes(event.key.toUpperCase())) {\n        setPressedKey(null);\n      }\n    };\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [allKeys]);\n\n  return (\n    <div className='keyboard' onKeyDown={handleKeyboard}>\n      <div className='line1'>\n        {keys1.map((key) => {\n          return <Key key={key} keyVal={key} disabled={disabledLetters.includes(key)} />;\n        })}\n      </div>\n      <div className='line2'>\n        {keys2.map((key) => {\n          return <Key key={key} keyVal={key} disabled={disabledLetters.includes(key)} />;\n        })}\n      </div>\n      <div className='line3'> \n        <Key key=\"enter\" keyVal={\"ENTER\"} bigKey />\n        {keys3.map((key) => {\n          return <Key key={key} keyVal={key} disabled={disabledLetters.includes(key)} />;\n        })}\n        <Key key=\"delete\" keyVal={\"DELETE\"} bigKey/>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Keyboard","/Users/user/repos/wordle-clone/src/components/Board.js",["76"],[],"import React, { useState } from 'react'\nimport Letter from './Letter'\nfunction Board() {\n    return (\n        <div className='board'>\n            <div className='row'>\n                <Letter letterPos={0} attemptVal={0}/>\n                <Letter letterPos={1} attemptVal={0}/>\n                <Letter letterPos={2} attemptVal={0}/>\n                <Letter letterPos={3} attemptVal={0}/>\n                <Letter letterPos={4} attemptVal={0}/>\n            </div>\n            <div className='row'>\n                <Letter letterPos={0} attemptVal={1}/>\n                <Letter letterPos={1} attemptVal={1}/>\n                <Letter letterPos={2} attemptVal={1}/>\n                <Letter letterPos={3} attemptVal={1}/>\n                <Letter letterPos={4} attemptVal={1}/>\n            </div>\n            <div className='row'>\n                <Letter letterPos={0} attemptVal={2}/>\n                <Letter letterPos={1} attemptVal={2}/>\n                <Letter letterPos={2} attemptVal={2}/>\n                <Letter letterPos={3} attemptVal={2}/>\n                <Letter letterPos={4} attemptVal={2}/>\n            </div>\n            <div className='row'>\n                <Letter letterPos={0} attemptVal={3}/>\n                <Letter letterPos={1} attemptVal={3}/>\n                <Letter letterPos={2} attemptVal={3}/>\n                <Letter letterPos={3} attemptVal={3}/>\n                <Letter letterPos={4} attemptVal={3}/>\n            </div>\n            <div className='row'>\n                <Letter letterPos={0} attemptVal={4}/>\n                <Letter letterPos={1} attemptVal={4}/>\n                <Letter letterPos={2} attemptVal={4}/>\n                <Letter letterPos={3} attemptVal={4}/>\n                <Letter letterPos={4} attemptVal={4}/>\n            </div>\n            <div className='row'>\n                <Letter letterPos={0} attemptVal={5}/>\n                <Letter letterPos={1} attemptVal={5}/>\n                <Letter letterPos={2} attemptVal={5}/>\n                <Letter letterPos={3} attemptVal={5}/>\n                <Letter letterPos={4} attemptVal={5}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Board","/Users/user/repos/wordle-clone/src/components/Letter.js",["77"],[],"import React, { useContext, useEffect } from 'react'\nimport { AppContext } from '../App';\n\nfunction Letter({ letterPos, attemptVal }) {\n    const { board, correctWord, currAttempt, setDisabledLetters } = useContext(AppContext);\n    const letter = board[attemptVal][letterPos];\n\n    const correct = correctWord.toUpperCase()[letterPos] === letter;\n    const almost = !correct && correctWord.includes(letter) && letter !== '';\n\n    const letterState = currAttempt.attempt > attemptVal &&\n    (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n\n    useEffect(() => {\n        if (letter !== '' && !correct && !almost){\n            setDisabledLetters((prev) => [...prev, letter]);\n        }\n    }, [currAttempt.attempt]);\n\n    return <div className='letter' id={`${letterState}`}>{\" \"}{letter}</div>;\n}\n\nexport default Letter","/Users/user/repos/wordle-clone/src/components/Key.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":19,"column":10,"nodeType":"80","messageId":"81","endLine":19,"endColumn":22},{"ruleId":"78","severity":1,"message":"82","line":19,"column":24,"nodeType":"80","messageId":"81","endLine":19,"endColumn":39},{"ruleId":"83","severity":1,"message":"84","line":10,"column":9,"nodeType":"85","endLine":10,"endColumn":49},{"ruleId":"83","severity":1,"message":"86","line":10,"column":9,"nodeType":"85","endLine":10,"endColumn":49},{"ruleId":"78","severity":1,"message":"87","line":14,"column":10,"nodeType":"80","messageId":"81","endLine":14,"endColumn":20},{"ruleId":"78","severity":1,"message":"88","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"89","line":18,"column":8,"nodeType":"90","endLine":18,"endColumn":29,"suggestions":"91"},"no-unused-vars","'guessedWords' is assigned a value but never used.","Identifier","unusedVar","'setGuessedWords' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'allKeys' array makes the dependencies of useCallback Hook (at line 29) change on every render. To fix this, wrap the initialization of 'allKeys' in its own useMemo() Hook.","VariableDeclarator","The 'allKeys' array makes the dependencies of useEffect Hook (at line 49) change on every render. To fix this, wrap the initialization of 'allKeys' in its own useMemo() Hook.","'pressedKey' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'almost', 'correct', 'letter', and 'setDisabledLetters'. Either include them or remove the dependency array.","ArrayExpression",["92"],{"desc":"93","fix":"94"},"Update the dependencies array to be: [almost, correct, currAttempt.attempt, letter, setDisabledLetters]",{"range":"95","text":"96"},[695,716],"[almost, correct, currAttempt.attempt, letter, setDisabledLetters]"]