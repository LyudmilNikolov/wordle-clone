{"ast":null,"code":"var _jsxFileName = \"/Users/user/repos/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Keyboard from './components/Keyboard';\nimport Board from './components/Board';\nimport { boardDefault } from './Words';\nimport { createContext, useState } from 'react';\nimport words from \"./Word-bank.txt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letterPos: 0\n  });\n  const correctWord = 'RIGHT';\n  useEffect(() => {\n    // Split the contents of the file by the newline character\n    const wordArray = words.split(\"\\n\");\n\n    // Select a random word from the array\n    const randomIndex = Math.floor(Math.random() * wordArray.length);\n    const randomWord = wordArray[randomIndex];\n\n    // Update the state with the selected word\n    setCorrectWord(randomWord);\n  }, []);\n  console.log(randomWord);\n  console.log(correctWord);\n  const onSelectLetter = keyVal => {\n    if (currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letterPos: currAttempt.letterPos + 1\n    });\n  };\n  const onDelete = () => {\n    if (currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letterPos: currAttempt.letterPos - 1\n    });\n  };\n  const onEnter = () => {\n    if (currAttempt.letterPos !== 5) return;\n    setCurrAttempt({\n      attempt: currAttempt.attempt + 1,\n      letterPos: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        correctWord\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3MSMqS4rTCDsbzut6SoHEK6uUec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Keyboard","Board","boardDefault","createContext","useState","words","jsxDEV","_jsxDEV","AppContext","App","_s","board","setBoard","currAttempt","setCurrAttempt","attempt","letterPos","correctWord","useEffect","wordArray","split","randomIndex","Math","floor","random","length","randomWord","setCorrectWord","console","log","onSelectLetter","keyVal","newBoard","onDelete","onEnter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/user/repos/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Keyboard from './components/Keyboard';\nimport Board from './components/Board';\nimport { boardDefault } from './Words';\nimport { createContext, useState } from 'react';\nimport words from \"./Word-bank.txt\";\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt: 0, letterPos: 0 });\n\n  const correctWord = 'RIGHT';\n\n  useEffect(() => {\n    // Split the contents of the file by the newline character\n    const wordArray = words.split(\"\\n\");\n\n    // Select a random word from the array\n    const randomIndex = Math.floor(Math.random() * wordArray.length);\n    const randomWord = wordArray[randomIndex];\n\n    // Update the state with the selected word\n    setCorrectWord(randomWord);\n  }, []);\n\n  console.log(randomWord);\n\n  console.log(correctWord);\n\n  const onSelectLetter = (keyVal) => {\n    if (currAttempt.letterPos > 4) return;\n    const newBoard = [...board]\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal\n    setBoard(newBoard)\n    setCurrAttempt({...currAttempt, letterPos: currAttempt.letterPos + 1});\n  }; \n\n  const onDelete = () => {\n    if(currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard)\n    setCurrAttempt({...currAttempt, letterPos: currAttempt.letterPos - 1 });\n  };\n\n  const onEnter = () => {\n    if(currAttempt.letterPos !== 5)return;\n    setCurrAttempt({ attempt: currAttempt.attempt + 1, letterPos: 0 });\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Wordle</h1>\n      </nav>\n      <AppContext.Provider value={{ board, setBoard, currAttempt, setCurrAttempt, onSelectLetter, onDelete, onEnter, correctWord }}>\n        \n        <div className='game'>\n        <Board/>\n        <Keyboard/>\n        </div>\n      </AppContext.Provider>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,YAAY,QAAQ,SAAS;AACtC,SAASC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,UAAU,gBAAGL,aAAa,EAAE;AAEzC,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACF,YAAY,CAAC;EAChD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAAEW,OAAO,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAE,CAAC,CAAC;EAE5E,MAAMC,WAAW,GAAG,OAAO;EAE3BC,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,SAAS,GAAGd,KAAK,CAACe,KAAK,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGL,SAAS,CAACM,MAAM,CAAC;IAChE,MAAMC,UAAU,GAAGP,SAAS,CAACE,WAAW,CAAC;;IAEzC;IACAM,cAAc,CAACD,UAAU,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAENE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvBE,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;EAExB,MAAMa,cAAc,GAAIC,MAAM,IAAK;IACjC,IAAIlB,WAAW,CAACG,SAAS,GAAG,CAAC,EAAE;IAC/B,MAAMgB,QAAQ,GAAG,CAAC,GAAGrB,KAAK,CAAC;IAC3BqB,QAAQ,CAACnB,WAAW,CAACE,OAAO,CAAC,CAACF,WAAW,CAACG,SAAS,CAAC,GAAGe,MAAM;IAC7DnB,QAAQ,CAACoB,QAAQ,CAAC;IAClBlB,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAEG,SAAS,EAAEH,WAAW,CAACG,SAAS,GAAG;IAAC,CAAC,CAAC;EACxE,CAAC;EAED,MAAMiB,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAGpB,WAAW,CAACG,SAAS,KAAK,CAAC,EAAE;IAChC,MAAMgB,QAAQ,GAAG,CAAC,GAAGrB,KAAK,CAAC;IAC3BqB,QAAQ,CAACnB,WAAW,CAACE,OAAO,CAAC,CAACF,WAAW,CAACG,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE;IAC7DJ,QAAQ,CAACoB,QAAQ,CAAC;IAClBlB,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAEG,SAAS,EAAEH,WAAW,CAACG,SAAS,GAAG;IAAE,CAAC,CAAC;EACzE,CAAC;EAED,MAAMkB,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAGrB,WAAW,CAACG,SAAS,KAAK,CAAC,EAAC;IAC/BF,cAAc,CAAC;MAAEC,OAAO,EAAEF,WAAW,CAACE,OAAO,GAAG,CAAC;MAAEC,SAAS,EAAE;IAAE,CAAC,CAAC;EACpE,CAAC;EAED,oBACET,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAA6B,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX,eACNjC,OAAA,CAACC,UAAU,CAACiC,QAAQ;MAACC,KAAK,EAAE;QAAE/B,KAAK;QAAEC,QAAQ;QAAEC,WAAW;QAAEC,cAAc;QAAEgB,cAAc;QAAEG,QAAQ;QAAEC,OAAO;QAAEjB;MAAY,CAAE;MAAAmB,QAAA,eAE3H7B,OAAA;QAAK4B,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACrB7B,OAAA,CAACN,KAAK;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACRjC,OAAA,CAACP,QAAQ;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACc;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAElB;AAEV;AAAC9B,EAAA,CA1DQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}