{"ast":null,"code":"import _regeneratorRuntime from\"/Users/user/repos/wordle-clone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/user/repos/wordle-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import wordbank from'./Word-bank.txt';export var boardDefault=[[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\"]];export var generateWordSet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var wordSet,todaysWord;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(wordbank).then(function(response){return response.text();}).then(function(result){var wordArr=result.split('\\n');todaysWord=wordArr[Math.floor(Math.random()*wordArr.length)];wordSet=new Set(wordArr);});case 2:return _context.abrupt(\"return\",{wordSet:wordSet,todaysWord:todaysWord});case 3:case\"end\":return _context.stop();}},_callee);}));return function generateWordSet(){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["wordbank","boardDefault","generateWordSet","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wordSet","todaysWord","wrap","_callee$","_context","prev","next","fetch","then","response","text","result","wordArr","split","Math","floor","random","length","Set","abrupt","stop","apply","arguments"],"sources":["/Users/user/repos/wordle-clone/src/Words.js"],"sourcesContent":["import wordbank from './Word-bank.txt'\n\nexport const boardDefault = [\n    [\"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\"],\n];\n\nexport const generateWordSet = async () => {\n    let wordSet;\n    let todaysWord;\n    await fetch(wordbank).then((response) => response.text()).then((result) =>{\n        const wordArr = result.split('\\n');\n        todaysWord = wordArr[Math.floor(Math.random() * wordArr.length)]\n        wordSet = new Set(wordArr);\n    });\n\n    return { wordSet, todaysWord }\n};"],"mappings":"wPAAA,MAAO,CAAAA,QAAQ,KAAM,iBAAiB,CAEtC,MAAO,IAAM,CAAAC,YAAY,CAAG,CACxB,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACpB,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACpB,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACpB,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACpB,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACpB,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CACvB,CAED,MAAO,IAAM,CAAAC,eAAe,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,OAAA,CAAAC,UAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAGrB,CAAAC,KAAK,CAACf,QAAQ,CAAC,CAACgB,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,EAAE,GAAC,CAACF,IAAI,CAAC,SAACG,MAAM,CAAI,CACtE,GAAM,CAAAC,OAAO,CAAGD,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC,CAClCZ,UAAU,CAAGW,OAAO,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGJ,OAAO,CAACK,MAAM,CAAC,CAAC,CAChEjB,OAAO,CAAG,GAAI,CAAAkB,GAAG,CAACN,OAAO,CAAC,CAC9B,CAAC,CAAC,eAAAR,QAAA,CAAAe,MAAA,UAEK,CAAEnB,OAAO,CAAPA,OAAO,CAAEC,UAAU,CAAVA,UAAW,CAAC,0BAAAG,QAAA,CAAAgB,IAAA,MAAArB,OAAA,GACjC,kBAVY,CAAAL,eAAeA,CAAA,SAAAC,IAAA,CAAA0B,KAAA,MAAAC,SAAA,OAU3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}